int array1D[5]
int array2D[3][4]
vector<int> vec1D
vector<vector<int>> vec2D

 int arr[10];
 memset(arr, -1, sizeof(arr));

vector<int> vec(10);  // Create a vector of size 10

int arr[5][10];
memset(arr, 0, sizeof(arr));

// 1 D array
int length = sizeof(arr) / sizeof(arr[0]);

// 2 D array

int arr[4][5];
int rows = sizeof(arr) / sizeof(arr[0]);
int cols = sizeof(arr[0]) / sizeof(arr[0][0]);

// 1 D vector initialization
vector<int> v2(5);          // Vector of size 5, all elements initialized to 0
vector<int> v3(5, 100);     // Vector of size 5, all elements initialized to 100

// 2 D vector initialization
vector<vector<int>> matrix1(5, std::vector<int>(4, 0));  // 5x4 matrix initialized with 0s
vector<vector<int>> matrix2 = {{1,2,3}, {4,5,6}, {7,8,9}}; // 3x3 matrix with specified values

vector<vector<bool>> matrix(rows, vector<bool>(cols, false));