(1 << n) i.e.  2^n # left shift operator # 2 less than symbol

for mask in range(1 << n):
    for i in range(n):
        mask & (1 << i)
        mask | (1 << i)


# Dist(n1, n2) = Dist(root, n1) + Dist(root, n2) - 2*Dist(root, lca) 
        
# non ascii delimeter
/:    #  Ï€

# 2^n subset generation of a set nums
vector<int> nums;
int size = nums.size();
for (int mask = 0; mask < (1 << size); ++mask) {
    for (int i = 0; i < size; ++i) {
        if (mask & (1 << i)) {
           // i included in mask
        }
    }
}
